name: Load Tests

on:
  workflow_dispatch:
  push:
    branches: [main]
  pull_request:

jobs:
  loadtest:
    runs-on: ubuntu-latest
    env:
      PYTHONWARNINGS: error
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: |
            requirements.txt
            requirements-dev.txt
      - name: Set up Kubernetes
        uses: azure/setup-kubectl@v3
        with:
          version: 'v1.29.0'
      - name: Set up AWS CLI
        uses: aws-actions/setup-cli@v2
      - name: Create staging namespace
        run: |
          NS="staging-${{ github.run_id }}"
          echo "NS=$NS" >> "$GITHUB_ENV"
          kubectl create namespace "$NS"
          ./scripts/sync_staging_secrets.sh prod "$NS"
      - name: Deploy services
        uses: ./.github/actions/blue-green-rollout
        with:
          namespace: ${{ env.NS }}
          services: >-
            orchestrator ai-mockup-generation data-storage signal-ingestion
            scoring-engine marketplace-publisher feedback-loop
          registry: example
          tag: main
      - name: Create ephemeral S3 bucket
        run: |
          BUCKET="desainz-${{ github.run_id }}"
          echo "BUCKET=$BUCKET" >> "$GITHUB_ENV"
          aws s3api create-bucket --bucket "$BUCKET"
          ./scripts/setup_storage.sh "$BUCKET"
          python scripts/apply_s3_lifecycle.py "$BUCKET"
      - name: Run integration tests
        env:
          S3_BUCKET: ${{ env.BUCKET }}
        run: ./scripts/run-integration-tests.sh
      - name: Teardown resources
        if: always()
        run: |
          aws s3 rb "s3://${{ env.BUCKET }}" --force || true
          kubectl delete namespace "$NS" --wait || true
