name: Tests

on:
  push:
    branches: [main, stable]
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        python-version: ["3.11", "3.12"]
        node-version: ["18", "20"]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "${{ matrix.python-version }}"
          cache: 'pip'
          cache-dependency-path: |
            requirements.txt
            requirements-dev.txt
      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: "${{ matrix.node-version }}"
          cache: 'npm'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt -r requirements-dev.txt
          npm ci
          python -m pip install -e .
      - name: Run tests
        run: |
          pytest -vv
          npm test

  publish:
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      - name: Install Poetry
        run: |
          python -m pip install --upgrade pip
          pip install poetry
      - name: Publish microservice packages
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          for pyproj in backend/*/pyproject.toml; do
            svc=$(dirname "$pyproj")
            echo "Publishing $svc"
            poetry config repositories.github "https://pypi.pkg.github.com/${GITHUB_REPOSITORY_OWNER}"
            cd "$svc"
            poetry publish --build -r github -u "$GITHUB_ACTOR" -p "$GITHUB_TOKEN"
            cd -
          done
