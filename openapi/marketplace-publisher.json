{
  "openapi": "3.1.0",
  "info": {
    "title": "marketplace-publisher",
    "version": "0.1.0"
  },
  "paths": {
    "/publish": {
      "post": {
        "summary": "Publish",
        "description": "Create a publish task and run it in the background.",
        "operationId": "publish_publish_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PublishRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": {
                    "type": "integer"
                  },
                  "type": "object",
                  "title": "Response Publish Publish Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/tasks/{task_id}": {
      "get": {
        "summary": "Get Task Status",
        "description": "Return current status of a publish task.",
        "operationId": "get_task_status_tasks__task_id__get",
        "parameters": [
          {
            "name": "task_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Task Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Get Task Status Tasks  Task Id  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/tasks/{task_id}/retry": {
      "post": {
        "summary": "Retry Task",
        "description": "Re-trigger publishing for a task.",
        "operationId": "retry_task_tasks__task_id__retry_post",
        "parameters": [
          {
            "name": "task_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Task Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/health": {
      "get": {
        "summary": "Health",
        "description": "Return service liveness.",
        "operationId": "health_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "type": "object",
                  "title": "Response Health Health Get"
                }
              }
            }
          }
        }
      }
    },
    "/ready": {
      "get": {
        "summary": "Ready",
        "description": "Return service readiness.",
        "operationId": "ready_ready_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "type": "object",
                  "title": "Response Ready Ready Get"
                }
              }
            }
          }
        }
      }
    },
    "/webhooks/{marketplace}": {
      "post": {
        "summary": "Webhook",
        "description": "Receive status callbacks from marketplaces.",
        "operationId": "webhook_webhooks__marketplace__post",
        "parameters": [
          {
            "name": "marketplace",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Marketplace"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebhookPayload"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "Marketplace": {
        "type": "string",
        "enum": [
          "redbubble",
          "amazon_merch",
          "etsy",
          "society6"
        ],
        "title": "Marketplace",
        "description": "Supported marketplaces."
      },
      "PublishRequest": {
        "properties": {
          "marketplace": {
            "$ref": "#/components/schemas/Marketplace"
          },
          "design_path": {
            "type": "string",
            "format": "path",
            "title": "Design Path"
          },
          "metadata": {
            "additionalProperties": true,
            "type": "object",
            "title": "Metadata",
            "default": {}
          }
        },
        "type": "object",
        "required": [
          "marketplace",
          "design_path"
        ],
        "title": "PublishRequest",
        "description": "Request body for initiating a publish task."
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      },
      "WebhookPayload": {
        "type": "object",
        "properties": {
          "task_id": {
            "type": "integer",
            "title": "Task Id"
          },
          "status": {
            "type": "string",
            "title": "Status"
          }
        },
        "required": [
          "task_id",
          "status"
        ],
        "title": "WebhookPayload",
        "description": "Webhook callback payload."
      }
    }
  },
  "x-spec-version": "da4434e0f6994d4bb13d7176c0c8b2839b35df7082e770432f09a9bb58daa88d"
}
